Coding Exercise

Build a Simple User Profile Settings App

Summary

You are asked to build a simple ReactJS front-end-only app that allows a user to log in, navigate to their “profile” page, update it and verify their profile has changed. No back-end services are expected or required. A simple json file is given below that you should return via a function that mocks connecting to a backend service. We expect to see the whole project with a structure that you would typically employ that contains the HTML, CSS, JavaScript and image files, plus any other translation or compilation files or configuration (e.g. Webpack) you would typically use.

User story

1.      A user logs in through a simple username and password form, page or modal.

2.      The user is presented with a simple navigation menu on which “Profile” is one option (you can add or mock others just to make it obvious there are other navigation options, but these don’t need to be implemented)

3.      The user clicks “Profile” and is take to a profile page which lists a collection of user data. Two buttons are also presented: Edit and Cancel. Cancel takes the user back to the first page (2).

4.      The user clicks Edit and is shown the user data in editable form along with two buttons: Save and Cancel. Cancel returns the user to the “Profile” page in 3.

5.      The user changes the values and clicks Save.

6.      The user is presented with the updated user data in non-editable form.

7.      The user presses Back and goes back to (2).

8.      The user clicks the “Profile” link again and goes to the profile page which should, again, show the updated data they edited in step (5).

We don’t want you to spend more than a few hours on this. Hopefully you can bootstrap a front-end project relatively quickly and create some simple navigation, folder structures and components easily and provide a sense of how you organise your code, structure and components.

Required

1.      ReactJS

2.      NPM

3.      Maintaining state across page clicks

Not Required

 

1.      Any back-end services (you can mock these)

2.      Graphics, images or too much styling

3.      Database or actually persisting data – maintaining state in memory is all that is required

4.      True authentication mechanism – hardcoded user info is fine with basic form authentication

